(yas/define-snippets 'coffee-mode
                     '(("fora" "for ${1:name} in ${2:array}\n  ${3:# body...}" "Array Comprehension" nil nil nil nil nil)
                       ("bfun" "(${1:args}) =>\n  ${2:# body...}" "Function (bound)" nil nil nil nil nil)
                       ("cla" "class ${1:ClassName}${2: extends ${3:Ancestor}}\n\n  ${4:constructor: (${5:args}) ->\n    ${6:# body...}}\n  $7" "Class" nil nil nil nil nil)
                       ("elif" "else if ${1:condition}\n  ${2:# body...}" "Else if" nil nil nil nil nil)
                       ("fun" "(${1:args}) ->\n  ${2:# body...}\n\n" "Function" nil nil nil nil nil)
                       ("ife" "if ${1:condition}\n  ${2:# body...}\nelse\n  ${3:# body...}" "If .. Else" nil nil nil nil nil)
                       ("if" "if ${1:condition}\n  ${2:# body...}" "If" nil nil nil nil nil)
                       ("#" "#{${1:`yas/selected-text`}}" "Interpolated Code" nil nil nil nil nil)
                       ("foro" "for ${1:key}, ${2:value} of ${3:Object}\n  ${4:# body...}" "Object comprehension" nil nil nil nil nil)
                       ("forrex" "for ${1:name} in [${2:start}...${3:finish}]${4: by ${5:step}}\n  ${6:# body...}" "Range comprehension (exclusive)" nil nil nil nil nil)
                       ("forr" "for ${1:name} in [${2:start}..${3:finish}]${4: by ${5:step}}\n  ${6:# body...}" "Range comprehension (inclusive)" nil nil nil nil nil)
                       ("Raw javascript" "\\`${1:`pbpaste`}\\`" "Raw javascript" nil nil nil nil nil)
                       ("swi" "switch ${1:object}\n  when ${2:value}\n    ${3:# body...}" "Switch" nil nil nil nil nil)
                       ("ifte" "if ${1:condition} then ${2:value} else ${3:other}" "Ternary If" nil nil nil nil nil)
                       ("try" "try\n  $1\ncatch ${2:error}\n  $3" "Try .. Catch" nil nil nil nil nil)
                       ("unl" "${1:action} unless ${2:condition}" "Unless" nil nil nil nil nil)
                       ("/1" "# $1\n# ==============================================================================\n$0" "Subheader" nil nil nil nil nil)
                       ("/2" "# $1\n# ----------------------------------------------------------------------\n$0" "Subheader" nil nil nil nil nil)
                       ("/3" "# $1\n# -------------------------\n$0" "Subheader" nil nil nil nil nil)
                       ("log" "console.log $0" "log" nil nil nil nil nil)
                       ("req" "${2/^.*?([\\w_]+).*$/\\L$1/} = require ${2:'${1:sys}'}$3" "require" nil nil nil nil nil))
                     'nil)
